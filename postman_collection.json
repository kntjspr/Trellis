{
	"info": {
		"_postman_id": "a5cd7c0e-3b7f-4bc0-8cbb-8a7ea38fedf9",
		"name": "Trellis API",
		"description": "A collection for testing the Trellis API with JWT authentication, user and admin endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"health"
					]
				},
				"description": "Check if the API is running properly."
			},
			"response": []
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Sign Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData && jsonData.token) {",
									"    pm.environment.set(\"authToken\", jsonData.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@example.com\",\n    \"username\": \"testuser\",\n    \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signup"
							]
						},
						"description": "Register a new user account."
					},
					"response": []
				},
				{
					"name": "Sign In (Email)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData && jsonData.token) {",
									"    pm.environment.set(\"authToken\", jsonData.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"user@example.com\",\n    \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "Sign in using email address."
					},
					"response": []
				},
				{
					"name": "Sign In (Username)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData && jsonData.token) {",
									"    pm.environment.set(\"authToken\", jsonData.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"testuser\",\n    \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "Sign in using username."
					},
					"response": []
				},
				{
					"name": "Sign In (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData && jsonData.token) {",
									"    pm.environment.set(\"adminToken\", jsonData.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"admin\",\n    \"password\": \"Admin123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "Sign in as admin user (created by the setup script)."
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Get the currently authenticated user's profile."
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration, login, and profile retrieval."
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						},
						"description": "Get a user profile by ID (authenticated)."
					},
					"response": []
				}
			],
			"description": "User-related endpoints that require authentication."
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "List Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/admin/users?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "role",
									"value": "member",
									"disabled": true
								}
							]
						},
						"description": "List all users with pagination and optional filtering (admin only)."
					},
					"response": []
				},
				{
					"name": "Get User Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/admin/users/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"2"
							]
						},
						"description": "Get detailed user information (admin only)."
					},
					"response": []
				},
				{
					"name": "Ban User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"Violation of terms of service\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/users/2/ban",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"2",
								"ban"
							]
						},
						"description": "Ban a user (admin only)."
					},
					"response": []
				},
				{
					"name": "Unban User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/admin/users/2/unban",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"2",
								"unban"
							]
						},
						"description": "Unban a user (admin only)."
					},
					"response": []
				},
				{
					"name": "Change User Role",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/users/2/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"2",
								"role"
							]
						},
						"description": "Change a user's role (admin only). Valid roles: admin, member, banned."
					},
					"response": []
				}
			],
			"description": "Admin-only endpoints for user management, including listing, banning, and role changes."
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Public Endpoints",
					"item": [
						{
							"name": "Get All Products",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/product/products?page=1&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"product",
										"products"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								},
								"description": "Get a list of all public products with pagination."
							},
							"response": []
						},
						{
							"name": "Get Product by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/product/products/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"product",
										"products",
										"1"
									]
								},
								"description": "Get a specific product by its ID."
							},
							"response": []
						},
						{
							"name": "Get Products by Category",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/product/categories/1/products?page=1&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"product",
										"categories",
										"1",
										"products"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								},
								"description": "Get all products in a specific category with pagination."
							},
							"response": []
						},
						{
							"name": "Get Product Stock",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/product/products/1/stock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"product",
										"products",
										"1",
										"stock"
									]
								},
								"description": "Get the current stock level for a product."
							},
							"response": []
						}
					],
					"description": "Public product endpoints that do not require authentication."
				},
				{
					"name": "Admin Endpoints",
					"item": [
						{
							"name": "Categories",
							"item": [
								{
									"name": "Create Category",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"New Category\",\n    \"description\": \"Description of the new category\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/product/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												"categories"
											]
										},
										"description": "Create a new product category (admin only)."
									},
									"response": []
								},
								{
									"name": "Get All Categories",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/product/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												"categories"
											]
										},
										"description": "Get all product categories (admin only)."
									},
									"response": []
								},
								{
									"name": "Get Category by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/product/categories/1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												"categories",
												"1"
											]
										},
										"description": "Get a category by its ID (admin only)."
									},
									"response": []
								},
								{
									"name": "Update Category",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Updated Category\",\n    \"description\": \"Updated description of the category\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/product/categories/1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												"categories",
												"1"
											]
										},
										"description": "Update a category (admin only)."
									},
									"response": []
								},
								{
									"name": "Delete Category",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/product/categories/1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												"categories",
												"1"
											]
										},
										"description": "Delete a category (admin only)."
									},
									"response": []
								}
							],
							"description": "Category management endpoints (admin only)."
						},
						{
							"name": "Products",
							"item": [
								{
									"name": "Create Product",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"header\": \"New Product\",\n    \"subheadline\": \"Product Subheadline\",\n    \"body\": \"Description of the new product\",\n    \"price\": 19.99,\n    \"category_id\": 1,\n    \"image_url\": \"https://example.com/images/product.jpg\",\n    \"serials\": [\"SERIAL-001\", \"SERIAL-002\", \"SERIAL-003\"]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/product/products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												"products"
											]
										},
										"description": "Create a new product (admin only)."
									},
									"response": []
								},
								{
									"name": "Update Product",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"header\": \"Updated Product\",\n    \"subheadline\": \"Updated Subheadline\",\n    \"body\": \"Updated description of the product\",\n    \"price\": 24.99,\n    \"category_id\": 1,\n    \"image_url\": \"https://example.com/images/updated-product.jpg\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/product/products/1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												"products",
												"1"
											]
										},
										"description": "Update a product (admin only)."
									},
									"response": []
								},
								{
									"name": "Delete Product",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/product/products/1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												"products",
												"1"
											]
										},
										"description": "Delete a product (admin only)."
									},
									"response": []
								}
							],
							"description": "Product management endpoints (admin only)."
						},
						{
							"name": "Serials Management",
							"item": [
								{
									"name": "Get Product Serials",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/product/products/1/serials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												"products",
												"1",
												"serials"
											]
										},
										"description": "Get all serial numbers for a product (admin only)."
									},
									"response": []
								},
								{
									"name": "Add Product Serials",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serials\": [\"SERIAL-004\", \"SERIAL-005\", \"SERIAL-006\"]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/product/products/1/serials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												"products",
												"1",
												"serials"
											]
										},
										"description": "Add new serial numbers to a product (admin only)."
									},
									"response": []
								},
								{
									"name": "Remove Product Serials",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serials\": [\"SERIAL-001\", \"SERIAL-002\"]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/product/products/1/serials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												"products",
												"1",
												"serials"
											]
										},
										"description": "Remove serial numbers from a product (admin only)."
									},
									"response": []
								},
								{
									"name": "Get Low Stock Products",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/product/products/low-stock?threshold=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"product",
												"products",
												"low-stock"
											],
											"query": [
												{
													"key": "threshold",
													"value": "5"
												}
											]
										},
										"description": "Get all products with stock below a specified threshold (admin only)."
									},
									"response": []
								}
							],
							"description": "Product serial number management (admin only)."
						}
					],
					"description": "Admin-only endpoints for product management."
				}
			],
			"description": "Product module endpoints for managing products, categories, and serial numbers."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3002",
			"type": "string"
		}
	]
}
